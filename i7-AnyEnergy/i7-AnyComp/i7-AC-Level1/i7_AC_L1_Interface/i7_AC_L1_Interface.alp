<?xml version="1.0" encoding="UTF-8"?>
<!--
*************************************************
	         AnyLogic Project File 
*************************************************	         
-->
<AnyLogicWorkspace WorkspaceVersion="1.9" AnyLogicVersion="8.8.2.202303221150" AlpVersion="8.7.7">
<Model>
	<Id>1554939177570</Id>
	<Name><![CDATA[i7_AC_L1_Interface]]></Name>
	<Description><![CDATA[// MIT License
// 
// Copyright (c) 2023 Computer Science 7 - FAU
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.]]></Description>
	<EngineVersion>6</EngineVersion>
	<JavaPackageName><![CDATA[de.fau.i7.anyenergy.anycomp.level1.interfaces]]></JavaPackageName>
	<ModelTimeUnit><![CDATA[Hour]]></ModelTimeUnit>
	<ActiveObjectClasses>
		<!--   =========   Active Object Class   ========  -->
		<ActiveObjectClass>
			<Id>1696265446274</Id>
			<Name><![CDATA[Dummy]]></Name>
			<AdditionalClassCode><![CDATA[// MIT License
// 
// Copyright (c) 2023 Computer Science 7 - FAU
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.]]></AdditionalClassCode>
			<Generic>false</Generic>
			<GenericParameter>
				<Id>1696265446269</Id>
				<Name><![CDATA[1696265446269]]></Name>
				<GenericParameterValue Class="CodeValue">
					<Code><![CDATA[T extends Agent]]></Code>
				</GenericParameterValue>
				<GenericParameterLabel><![CDATA[Generic parameter:]]></GenericParameterLabel>
			</GenericParameter>
			<FlowChartsUsage>ENTITY</FlowChartsUsage>
			<SamplesToKeep>100</SamplesToKeep>
			<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
			<ElementsLimitValue>100</ElementsLimitValue>
			<MakeDefaultViewArea>true</MakeDefaultViewArea>
			<SceneGridColor/>
			<SceneBackgroundColor/>
			<SceneSkybox>null</SceneSkybox>
			<AgentProperties>
				<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
				<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
				<RotateAnimationVertically>false</RotateAnimationVertically>
				<VelocityCode Class="CodeUnitValue">
					<Code><![CDATA[10]]></Code>
					<Unit Class="SpeedUnits"><![CDATA[MPS]]></Unit>
				</VelocityCode>
				<PhysicalLength Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalLength>
				<PhysicalWidth Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalWidth>
				<PhysicalHeight Class="CodeUnitValue">
					<Code><![CDATA[1]]></Code>
					<Unit Class="LengthUnits"><![CDATA[METER]]></Unit>
				</PhysicalHeight>
			</AgentProperties>
			<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code><![CDATA[1.0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[SECOND]]></Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode><![CDATA[500]]></WidthCode>
					<HeightCode><![CDATA[500]]></HeightCode>
					<ZHeightCode><![CDATA[0]]></ZHeightCode>
					<ColumnsCountCode><![CDATA[100]]></ColumnsCountCode>
					<RowsCountCode><![CDATA[100]]></RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<LayoutTypeApplyOnStartup>true</LayoutTypeApplyOnStartup>
					<NetworkType>USER_DEF</NetworkType>
					<NetworkTypeApplyOnStartup>true</NetworkTypeApplyOnStartup>
					<ConnectionsPerAgentCode><![CDATA[2]]></ConnectionsPerAgentCode>
					<ConnectionsRangeCode><![CDATA[50]]></ConnectionsRangeCode>
					<NeighborLinkFractionCode><![CDATA[0.95]]></NeighborLinkFractionCode>
					<MCode><![CDATA[10]]></MCode>
			</EnvironmentProperties>
			<DatasetsCreationProperties>
				<AutoCreate>true</AutoCreate>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1558339200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code><![CDATA[0]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code><![CDATA[1]]></Code>
						<Unit Class="TimeUnits"><![CDATA[HOUR]]></Unit>
					</RecurrenceCode>
			</DatasetsCreationProperties>
			<ScaleRuler>
				<Id>1696265446270</Id>
				<Name><![CDATA[scale]]></Name>
				<X>0</X><Y>-150</Y>
				<PublicFlag>false</PublicFlag>
				<PresentationFlag>false</PresentationFlag>
				<ShowLabel>false</ShowLabel>
				<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
				<Length>100</Length>
				<Rotation>0</Rotation>
				<ScaleType>BASED_ON_LENGTH</ScaleType>
				<ModelLength>10</ModelLength>
				<LengthUnits>METER</LengthUnits>
				<Scale>10</Scale>
				<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
			</ScaleRuler>
			<CurrentLevel>1696265446276</CurrentLevel>
			<ConnectionsId>1696265446278</ConnectionsId>
			<AgentLinks>
				<AgentLink>
					<Id>1696265446278</Id>
					<Name><![CDATA[connections]]></Name>
					<X>50</X><Y>-50</Y>
					<Label><X>15</X><Y>0</Y></Label>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>true</ShowLabel>
					<HandleReceiveInConnections>false</HandleReceiveInConnections>
					<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
					<AgentLinkBidirectional>true</AgentLinkBidirectional>
					<MessageType><![CDATA[Object]]></MessageType>
					<LineStyle>SOLID</LineStyle>
					<LineWidth>1</LineWidth>
					<LineColor>-16777216</LineColor>
					<LineZOrder>UNDER_AGENTS</LineZOrder>
					<LineArrow>NONE</LineArrow>
					<LineArrowPosition>END</LineArrowPosition>
				</AgentLink>
			</AgentLinks>


			<Presentation>
				<Level>
					<Id>1696265446276</Id>
					<Name><![CDATA[level]]></Name>
					<X>0</X><Y>0</Y>
					<Label><X>10</X><Y>0</Y></Label>
					<PublicFlag>true</PublicFlag>
					<PresentationFlag>true</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Z>0</Z>
					<LevelVisibility>ALWAYS_SHOW</LevelVisibility>


				</Level>
			</Presentation>

		</ActiveObjectClass>
	</ActiveObjectClasses>	
	<DifferentialEquationsMethod>EULER</DifferentialEquationsMethod>
	<MixedEquationsMethod>RK45_NEWTON</MixedEquationsMethod>
	<AlgebraicEquationsMethod>MODIFIED_NEWTON</AlgebraicEquationsMethod>
	<AbsoluteAccuracy>1.0E-5</AbsoluteAccuracy>
	<FixedTimeStep>0.001</FixedTimeStep>
	<RelativeAccuracy>1.0E-5</RelativeAccuracy>
	<TimeAccuracy>1.0E-5</TimeAccuracy>
	<Frame>
		<Width>2100</Width>
		<Height>850</Height>
	</Frame>
	<Database>
		<Logging>false</Logging>
		<AutoExport>false</AutoExport>
		<ShutdownCompact>false</ShutdownCompact>
		<ImportSettings>
		</ImportSettings>
		<ExportSettings>
		</ExportSettings>
	</Database>
	
	<RunConfiguration ActiveObjectClassId="1696265446274">
		<Id>1554939177580</Id>
		<Name><![CDATA[RunConfiguration]]></Name>
		<MaximumMemory>512</MaximumMemory>
		<ModelTimeProperties>
			<StopOption><![CDATA[Stop at specified time]]></StopOption>
			<InitialDate><![CDATA[1554854400000]]></InitialDate>	
			<InitialTime><![CDATA[0.0]]></InitialTime>	
			<FinalDate><![CDATA[1557446400000]]></FinalDate>	
			<FinalTime><![CDATA[100.0]]></FinalTime>	
		</ModelTimeProperties>
		<AnimationProperties>
			<StopNever>true</StopNever>
			<ExecutionMode>realTimeScaled</ExecutionMode>
			<RealTimeScale>1.0</RealTimeScale>
			<EnableZoomAndPanning>true</EnableZoomAndPanning>
			<EnableDeveloperPanel>false</EnableDeveloperPanel>
			<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
		</AnimationProperties>
		<Inputs>		
		</Inputs>
		<Outputs>
		</Outputs>
	</RunConfiguration>
	<JavaClasses>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1603398137686</Id>
			<Name><![CDATA[I7_AC_L1_EnumInterface]]></Name>
			<Text><![CDATA[/**
 * I7_AC_L1_EnumInterface
 */	
public class I7_AC_L1_EnumInterface implements java.io.Serializable {


	public enum EMessage
	{
		SWITCH_OFF, SWITCH_ON, SWITCH_ONOFF, SWITCH_OFF_FORCED,
	}
	
	/**
     * Default constructor
     */
    public I7_AC_L1_EnumInterface(){
    }
     
	
	@Override
	public String toString() {			
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 2L;
}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1684338655828</Id>
			<Name><![CDATA[I7_AC_L1_IARequest]]></Name>
			<Text><![CDATA[/**
 * I7_AC_L1_IARequest
 */	
public class I7_AC_L1_IARequest implements Serializable {

	public ArrayList<IRel0> calc_f;

	// set
	public ArrayList<IRel1<Double>> int_ext_r_ =  new ArrayList<>(Collections.singletonList((v)->{}));
	public ArrayList<IRel1<Double>> ext_int_r_ =  new ArrayList<>(Collections.singletonList((v)->{}));

	// get int_ec
	public ArrayList<IFunc0<Double>> ext_int_o =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> ext_int_a =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> ext_int_g =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> ext_int_r =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> ext_int_r_max =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> ext_int_r_min =  new ArrayList<>(Collections.singletonList(()->0.0));

	// get ec_int
	public ArrayList<IFunc0<Double>> int_ext_o =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> int_ext_a =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> int_ext_g =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> int_ext_r =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> int_ext_r_max =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> int_ext_r_min =  new ArrayList<>(Collections.singletonList(()->0.0));

	// get ec
	public ArrayList<IFunc0<Double>> soc_fraction =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> soc =  new ArrayList<>(Collections.singletonList(()->0.0));
	public ArrayList<IFunc0<Double>> cap =  new ArrayList<>(Collections.singletonList(()->0.0));

	public ArrayList<IFunc0<Integer>> prio =  new ArrayList<>(Collections.singletonList(()->0));

	// init0
	public void init0(String prefix, I7_AI_Interface ec)
	{
		// ec
		ext_int_r_ = ec.set(prefix + "ext_int_r");
		int_ext_r_ = ec.set(prefix + "int_ext_r");

		ext_int_r = ec.get(prefix + "ext_int_r");
		int_ext_r = ec.get(prefix + "int_ext_r");

		ext_int_r_max = ec.get(prefix + "ext_int_r_max");
		int_ext_r_max = ec.get(prefix + "int_ext_r_max");

		ext_int_r_min = ec.get(prefix + "ext_int_r_min");
		int_ext_r_min = ec.get(prefix + "int_ext_r_min");

		ext_int_o = ec.get(prefix + "ext_int_o");
		int_ext_o = ec.get(prefix + "int_ext_o");

		ext_int_a = ec.get(prefix + "ext_int_a");
		int_ext_a = ec.get(prefix + "int_ext_a");

		ext_int_g = ec.get(prefix + "ext_int_g");
		int_ext_g = ec.get(prefix + "int_ext_g");

		cap = ec.get(prefix + "cap");
		soc = ec.get(prefix + "soc");
		soc_fraction = ec.get(prefix + "soc_fraction");

		prio = ec.get("prio");
	}
	
	/**
     * Default constructor
     */
    public I7_AC_L1_IARequest() {
    }

 	@Override
	public String toString() {
 		String info =  "";

		// ec
 		info += "ext_int_r_ = " + ext_int_r_ + "\n";
 		info += "int_ext_r_ = " + int_ext_r_ + "\n";

 		info += "ext_int_r = " + ext_int_r + "\n";
 		info += "int_ext_r = " + int_ext_r + "\n";

 		info += "ext_int_r_max = " + ext_int_r_max + "\n";
 		info += "int_ext_r_max = " + int_ext_r_max + "\n";

 		info += "ext_int_r_min = " + ext_int_r_min + "\n";
 		info += "int_ext_r_min = " + int_ext_r_min + "\n";

 		info += "ext_int_o = " + ext_int_o + "\n";
 		info += "int_ext_o = " + int_ext_o + "\n";

 		info += "ext_int_a = " + ext_int_a + "\n";
 		info += "int_ext_a = " + int_ext_a + "\n";

 		info += "ext_int_g = " + ext_int_g + "\n";
 		info += "int_ext_g = " + int_ext_g + "\n";

 		info += "cap = " + cap + "\n";
 		info += "soc" + soc + "\n";
 		info += "soc_fraction = " + soc_fraction + "\n";
 		
 		info += "prio = " + prio + "\n";

 		return info;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1684339814902</Id>
			<Name><![CDATA[I7_AC_L1_IACalc]]></Name>
			<Text><![CDATA[/**
 * I7_AC_L1_IACalc
 */	
public class I7_AC_L1_IACalc implements Serializable {

	public ArrayList<IRel1<Long>> set_step = new ArrayList<>();
	public ArrayList<IRel0> clear_ra = new ArrayList<>();
	public ArrayList<IRel0> calc_z = new ArrayList<>();
	public ArrayList<IRel0> calc_f = new ArrayList<>();
	public ArrayList<IRel0> calc_step = new ArrayList<>();

	// init0
	public void init0(String prefix, I7_AI_Interface ec)
	{
		set_step.clear();
		clear_ra.clear();
		calc_z.clear();
		calc_f.clear();
		calc_step.clear();
		
		// ec
		set_step.addAll(ec.set(prefix + "set_step"));

		clear_ra.addAll(ec.calc(prefix + "clear_ra"));
		calc_z.addAll(ec.calc(prefix + "calc_z"));
		calc_f.addAll(ec.calc(prefix + "calc_f"));
		calc_step.addAll(ec.calc(prefix + "calc_step"));
	}
	
    /**
     * Default constructor
     */
    public I7_AC_L1_IACalc() {
    }

	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1684394323764</Id>
			<Name><![CDATA[I7_AC_L1_ICalc]]></Name>
			<Text><![CDATA[/**
 * I7_AC_L1_ICalc
 */	
public class I7_AC_L1_ICalc implements Serializable {

	public IRel1<Long> set_step = (x)->{};
	public IRel0 clear_ra;
	public IRel0 calc_z;
	public IRel0 calc_f;
	public IRel0 calc_step;

	// init0
	public void init0(String prefix, I7_AI_Interface contr)
	{
		// controller
		set_step = contr.set0(prefix + "set_step");

		clear_ra = contr.calc0(prefix + "clear_ra");
		calc_z = contr.calc0(prefix + "calc_z");
		calc_f = contr.calc0(prefix + "calc_f");
		calc_step = contr.calc0(prefix + "calc_step");
	}
	
    /**
     * Default constructor
     */
    public I7_AC_L1_ICalc() {
    }

	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1684395528931</Id>
			<Name><![CDATA[I7_AC_L1_IRequest]]></Name>
			<Text><![CDATA[/**
 * I7_AC_L1_IRequest
 */	
public class I7_AC_L1_IRequest implements Serializable {

	// calc ec
	public Map<String,IFunc0> get;
	public Map<String,IRel1> set;
	public Map<String,IRel0> calc;
	public Map<String,?> func;

	// set ext_int
	public IRel1<Double> ext_int_r_ = v->{};

	// set int_ext
	public IRel1<Double> int_ext_r_ = v->{};

	// get ext_int
	public IFunc0<Double> ext_int_o = ()->0.0;
	public IFunc0<Double> ext_int_a = ()->0.0;
	public IFunc0<Double> ext_int_g = ()->0.0;
	public IFunc0<Double> ext_int_r = ()->0.0;
	public IFunc0<Double> ext_int_r_max = ()->0.0;
	public IFunc0<Double> ext_int_r_min = ()->0.0;

	// get int_ext
	public IFunc0<Double> int_ext_o = ()->0.0;
	public IFunc0<Double> int_ext_a = ()->0.0;
	public IFunc0<Double> int_ext_g = ()->0.0;
	public IFunc0<Double> int_ext_r = ()->0.0;
	public IFunc0<Double> int_ext_r_max = ()->0.0;
	public IFunc0<Double> int_ext_r_min = ()->0.0;

	// get int
	public IFunc0<Double> soc_fraction = ()->0.0;
	public IFunc0<Double> soc = ()->0.0;
	public IFunc0<Double> cap = ()->0.0;	

	public IFunc0<Integer> prio = ()->0;	

	// init0
	public void init0(String prefix, I7_AI_Interface ec)
	{
		// set ext_int
		ext_int_r_ = ec.set0(prefix + "ext_int_r");

		// set int_ext
		int_ext_r_ = ec.set0(prefix + "int_ext_r");

		// get ext_int
		ext_int_o = ec.get0(prefix + "ext_int_o");
		ext_int_a = ec.get0(prefix + "ext_int_a");
		ext_int_g = ec.get0(prefix + "ext_int_g");
		ext_int_r = ec.get0(prefix + "ext_int_r");
		ext_int_r_max = ec.get0(prefix + "ext_int_r_max");
		ext_int_r_min = ec.get0(prefix + "ext_int_r_min");
		
		// get  int_ext
		int_ext_o = ec.get0(prefix + "int_ext_o");
		int_ext_a = ec.get0(prefix + "int_ext_a");
		int_ext_g = ec.get0(prefix + "int_ext_g");
		int_ext_r = ec.get0(prefix + "int_ext_r");
		int_ext_r_max = ec.get0(prefix + "int_ext_r_max");
		int_ext_r_min = ec.get0(prefix + "int_ext_r_min");
		
		
		// get  int
		cap = ec.get0(prefix + "cap");
		soc = ec.get0(prefix + "soc");
		soc_fraction = ec.get0(prefix + "soc_fraction");
		
		prio = ec.get0("prio");
		
	}
	
	/**
     * Default constructor
     */
    public I7_AC_L1_IRequest() {
    }

 	@Override
	public String toString() {
 		String info =  "";

		// get ext_int
 		info += "ext_int_o = " + ext_int_o + "\n";
 		info += "ext_int_a = " + ext_int_a + "\n";
 		info += "ext_int_g = " + ext_int_g + "\n";
 		info += "ext_int_r = " + ext_int_r + "\n";
 		info += "ext_int_r_max = " + ext_int_r_max + "\n";
 		info += "ext_int_r_min = " + ext_int_r_min + "\n";

		// get  int_ext
 		info += "int_ext_o = " + int_ext_o + "\n";
 		info += "int_ext_a = " + int_ext_a + "\n";
 		info += "int_ext_g = " + int_ext_g + "\n";
 		info += "int_ext_r = " + int_ext_r + "\n";
 		info += "int_ext_r_max = " + int_ext_r_max + "\n";
 		info += "int_ext_r_min = " + int_ext_r_min + "\n";

		// get  int
 		info += "cap = " + cap + "\n";
 		info += "soc = " + soc + "\n";
 		info += "soc_fraction = " + soc_fraction + "\n";
 		info += "prio = " + prio + "\n";
 		
		return info;
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
		<!--   =========   Java Class   ========  -->
		<JavaClass>
			<Id>1684658920539</Id>
			<Name><![CDATA[I7_AC_L1_DRequest]]></Name>
			<Text><![CDATA[/**
 * I7_AC_L1_DRequest
 */	
public class I7_AC_L1_DRequest implements Serializable {

	public static Map<String,IFunc0> get = Map.ofEntries(
			// values ext_int
			Map.entry("e_ext_int_r", ()->0.0),
			Map.entry("e_ext_int_o", ()->0.0),
			Map.entry("e_ext_int_a", ()->0.0),
			Map.entry("e_ext_int_z", ()->0.0),
			Map.entry("e_ext_int_g", ()->0.0),
			Map.entry("e_ext_int_r_max", ()->0.0),
			Map.entry("e_ext_int_r_min", ()->0.0),
			
			// values int_ext
			Map.entry("e_int_ext_r", ()->0.0),
			Map.entry("e_int_ext_o", ()->0.0),
			Map.entry("e_int_ext_a", ()->0.0),
			Map.entry("e_int_ext_z", ()->0.0),
			Map.entry("e_int_ext_g", ()->0.0),
			Map.entry("e_int_ext_r_max", ()->0.0),
			Map.entry("e_int_ext_r_min", ()->0.0),
			
			// values int
			Map.entry("e_cap", ()->0.0),
			Map.entry("e_soc", ()->0.0),
			Map.entry("e_soc_fraction", ()->0.0),
			Map.entry("prio", ()->0)
		);

	public static Map<String,IRel1> set = Map.ofEntries(
			// values ext_int
			Map.entry("e_ext_int_r", (IRel1<Double>) (v)->{}),
			//Map.entry("e_ext_int_o", (IRel1<Double>) (v)->{}),
			//Map.entry("e_ext_int_a", (IRel1<Double>) (v)->{}),
			//Map.entry("e_ext_int_z", (IRel1<Double>) (v)->{}),
			//Map.entry("e_ext_int_g", (IRel1<Double>) (v)->{}),
			//Map.entry("e_ext_int_r_max", (IRel1<Double>) (v)->{}),
			//Map.entry("e_ext_int_r_min", (IRel1<Double>) (v)->{}),
			
			// values int_ext
			Map.entry("e_int_ext_r", (IRel1<Double>) (v)->{}),
			//Map.entry("e_int_ext_o", (IRel1<Double>) (v)->{}),
			//Map.entry("e_int_ext_a", (IRel1<Double>) (v)->{}),
			//Map.entry("e_int_ext_z", (IRel1<Double>) (v)->{}),
			//Map.entry("e_int_ext_g", (IRel1<Double>) (v)->{}),
			//Map.entry("e_int_ext_r_max", (IRel1<Double>) (v)->{}),
			//Map.entry("e_int_ext_r_min", (IRel1<Double>) (v)->{}),
			
			// values int
			Map.entry("e_cap", (IRel1<Double>) (v)->{}),
			Map.entry("e_soc", (IRel1<Double>) (v)->{}),
			Map.entry("e_soc_fraction", (IRel1<Double>) (v)->{}),

			Map.entry("set_step", (IRel1<Long>) (x)->{})
		);

	public static Map<String,IRel0> calc = Map.ofEntries(
			// configuration and initialization
			Map.entry("init0", (IRel0) ()->{}),
			
			// sequencer
			Map.entry("clear_ra", (IRel0) ()->{}),
			Map.entry("calc_z", (IRel0) ()->{}),
			Map.entry("calc_f", (IRel0) ()->{}),
			Map.entry("calc_step", (IRel0) ()->{})
		);

	public static Map<String,?> func = Map.ofEntries(
			//Map.entry("func", (IFunc2<A,B,R>) (a,b)->f(a,b))
		);


	// init0
	public void init0()
	{
	}
	
	/**
     * Default constructor
     */
    public I7_AC_L1_DRequest() {
    }

 	@Override
	public String toString() {
		return super.toString();
	}

	/**
	 * This number is here for model snapshot storing purpose<br>
	 * It needs to be changed when this class gets changed
	 */ 
	private static final long serialVersionUID = 1L;

}]]></Text>
		</JavaClass>
	</JavaClasses>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[de.fau.i7.anyenergy.anyinterface.anyinterface]]></LibraryName>
		<VersionMajor>0</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
    <RequiredLibraryReference>
		<LibraryName><![CDATA[com.anylogic.libraries.modules.markup_descriptors]]></LibraryName>
		<VersionMajor>1</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionBuild>0</VersionBuild>
    </RequiredLibraryReference>
</Model>
</AnyLogicWorkspace>